<plexus>
  <load-on-start>
    <component>
      <role>org.apache.maven.continuum.Continuum</role>
    </component>
    <component>
      <role>org.apache.maven.user.acegi.acl.AclInitializer</role>
    </component>
    <component>
      <role>org.codehaus.plexus.taskqueue.execution.TaskQueueExecutor</role>
      <role-hint>build-project</role-hint>
    </component>
    <component>
      <role>org.codehaus.plexus.taskqueue.execution.TaskQueueExecutor</role>
      <role-hint>check-out-project</role-hint>
    </component>
    <!--
    <component>
      <role>org.apache.maven.continuum.web.xmlrpc.XmlRpcService</role>
    </component>
    -->
    <!-- load on start to inject values into the aspect -->
    <component>
      <role>org.codehaus.plexus.acegi.intercept.method.aspectj.AspectJSecurityInterceptorHelper</role>
    </component>
    <component>
      <role>org.codehaus.plexus.taskqueue.execution.TaskQueueExecutor</role>
      <role-hint>prepare-release</role-hint>
    </component>
    <component>
      <role>org.codehaus.plexus.taskqueue.execution.TaskQueueExecutor</role>
      <role-hint>perform-release</role-hint>
    </component>
  </load-on-start>

  <components>
    <!--
    | The XML-RPC service
    |-->
    <component>
      <role>org.apache.maven.continuum.web.xmlrpc.XmlRpcService</role>
      <implementation>org.apache.maven.continuum.web.xmlrpc.DefaultXmlRpcService</implementation>
      <description></description>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.xmlrpc.XmlRpcServer</role>
          <field-name>xmlRpcServer</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.xmlrpc.ContinuumXmlRpc</role>
          <field-name>handler</field-name>
        </requirement>
      </requirements>
      <configuration>
        <port>8000</port>
        <handler-name>continuum</handler-name>
      </configuration>
    </component>

    <!--
    | The mail notifier
    |-->
    <component>
      <role>org.codehaus.plexus.notification.notifier.Notifier</role>
      <role-hint>mail</role-hint>
      <implementation>org.apache.maven.continuum.notification.mail.MailContinuumNotifier</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.velocity.VelocityComponent</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.store.ContinuumStore</role>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.mailsender.MailSender</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.configuration.ConfigurationService</role>
        </requirement>
      </requirements>
      <configuration>
        <from-mailbox></from-mailbox>
        <from-name></from-name>
        <timestamp-format>EEE, d MMM yyyy HH:mm:ss Z</timestamp-format>
        <includeBuildResult>true</includeBuildResult>
        <alwaysSend>false</alwaysSend>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.notification.RecipientSource</role>
      <implementation>org.apache.maven.continuum.notification.ContinuumRecipientSource</implementation>
      <configuration>
        <!--
        Setting this propery will make Continuum send all emails to
        this address instead the address specified in the project
        configuration
        -->
        <to-override>${mail.override.to.address}</to-override>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.mailsender.MailSender</role>
      <implementation>org.codehaus.plexus.mailsender.javamail.JavamailMailSender</implementation>
      <configuration>
        <smtp-host>localhost</smtp-host>
        <smtp-port>25</smtp-port>
        <sslProvider>com.sun.net.ssl.internal.ssl.Provider</sslProvider>
        <!--
        <username>mylogin</username>
        <password>mypassword</password>
        <sslMode>true</sslMode>
        -->
      </configuration>
    </component>

    <!--
    | The irc notifier
    |-->
    <component>
      <role>org.codehaus.plexus.notification.notifier.Notifier</role>
      <role-hint>irc</role-hint>
      <implementation>org.apache.maven.continuum.notification.irc.IrcContinuumNotifier</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.ircbot.IrcBot</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.store.ContinuumStore</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.configuration.ConfigurationService</role>
        </requirement>
      </requirements>
      <configuration>
        <alwaysSend>false</alwaysSend>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.ircbot.IrcBot</role>
      <implementation>org.codehaus.plexus.ircbot.DefaultIrcClient</implementation>
    </component>

    <!--
    | The jabber notifier
    |-->
    <component>
      <role>org.codehaus.plexus.notification.notifier.Notifier</role>
      <role-hint>jabber</role-hint>
      <implementation>org.apache.maven.continuum.notification.jabber.JabberContinuumNotifier</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.jabber.JabberClient</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.configuration.ConfigurationService</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.store.ContinuumStore</role>
        </requirement>
      </requirements>
      <configuration>
        <alwaysSend>false</alwaysSend>
        <!-- from-address/>
        <from-password/>
        <host/>
        <port/>
        <sslConnection>true</sslConnection -->
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.jabber.JabberClient</role>
      <implementation>org.codehaus.plexus.jabber.DefaultJabberClient</implementation>
    </component>

    <!--
    | The MSN notifier
    |-->
    <component>
      <role>org.codehaus.plexus.notification.notifier.Notifier</role>
      <role-hint>msn</role-hint>
      <implementation>org.apache.maven.continuum.notification.msn.MsnContinuumNotifier</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.msn.MsnClient</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.configuration.ConfigurationService</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.store.ContinuumStore</role>
        </requirement>
      </requirements>
      <configuration>
        <alwaysSend>false</alwaysSend>
        <!-- from-address/>
        <from-password/ -->
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.msn.MsnClient</role>
      <implementation>org.codehaus.plexus.msn.DefaultMsnClient</implementation>
    </component>

    <!--
    | Velocity component used by the mail notifier
    |-->
    <component>
      <role>org.codehaus.plexus.velocity.VelocityComponent</role>
      <implementation>org.codehaus.plexus.velocity.DefaultVelocityComponent</implementation>
      <configuration>
        <properties>
          <property>
            <name>resource.loader</name>
            <value>threadContext</value>
          </property>
          <property>
            <name>threadContext.resource.loader.class</name>
            <value>org.codehaus.plexus.velocity.ContextClassLoaderResourceLoader</value>
          </property>
          <property>
            <name>velocimacro.library</name>
            <value>org/apache/maven/continuum/notification/mail/templates/common.vm</value>
          </property>
        </properties>
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.continuum.web.util.WorkingCopyContentGenerator</role>
      <implementation>org.apache.maven.continuum.web.util.WorkingCopyContentGenerator</implementation>
    </component>

    <component>
      <role>org.codehaus.plexus.formica.validation.Validator</role>
      <role-hint>url</role-hint>
      <implementation>org.codehaus.plexus.formica.validation.UrlValidator</implementation>
      <configuration>
        <allowedSchemes>
          <allowedScheme>http</allowedScheme>
          <allowedScheme>https</allowedScheme>
          <allowedScheme>ftp</allowedScheme>
          <!-- <allowedScheme>file</allowedScheme> -->
        </allowedSchemes>
      </configuration>
    </component>

    <!-- TODO share db configuration between components -->
    <component>
      <role>org.codehaus.plexus.jdo.JdoFactory</role>
      <implementation>org.codehaus.plexus.jdo.DefaultConfigurableJdoFactory</implementation>
      <configuration>
        <!-- Database Configuration -->
        <driverName>${db.driverName}</driverName>
        <url>${db.url}</url>
        <userName>${db.userName}</userName>
        <password>${db.password}</password>
        <persistenceManagerFactoryClass>org.jpox.PersistenceManagerFactoryImpl</persistenceManagerFactoryClass>

        <otherProperties>
          <!-- JPOX and JDO configuration -->
          <property>
            <name>org.jpox.autoCreateSchema</name>
            <value>true</value>
          </property>
          <property>
            <name>org.jpox.autoStartMechanism</name>
            <value>SchemaTable</value>
          </property>
          <property>
            <name>org.jpox.autoStartMechanismMode</name>
            <value>Ignored</value>
          </property>
          <property>
            <name>org.jpox.transactionIsolation</name>
            <value>READ_UNCOMMITTED</value>
          </property>
          <property>
            <name>org.jpox.poid.transactionIsolation</name>
            <value>READ_UNCOMMITTED</value>
          </property>
          <!-- this is required for MySQL -->
          <property>
            <name>org.jpox.rdbms.stringDefaultLength</name>
            <value>255</value>
          </property>
        </otherProperties>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.rememberme.RememberMeServices</role>
      <implementation>org.apache.maven.continuum.web.rememberme.DefaultRememberMeServices</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
    </component>

    <!--
     | ACEGI Configuration
     -->
     
    <!-- Authentication -->

<!--
    <component>
      <role>org.acegisecurity.util.FilterChainProxy</role>
      <implementation>org.acegisecurity.util.FilterChainProxy</implementation>
      <requirements>
        <requirement>
          <role>org.acegisecurity.intercept.web.FilterInvocationDefinitionMap</role>
          <field-name>filterInvocationDefinitionSource</field-name>
        </requirement>
      </requirements>
      <configuration>
        <filterInvocationDefinitionSource>
            CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
            PATTERN_TYPE_APACHE_ANT
            /**=httpSessionContextIntegrationFilter,authenticationProcessingFilter,exceptionTranslationFilter,filterSecurityInterceptor
        </filterInvocationDefinitionSource>
      </configuration>
    </component>
-->

    <component>
      <role>org.acegisecurity.providers.ProviderManager</role>
      <implementation>org.acegisecurity.providers.ProviderManager</implementation>
      <requirements>
        <requirement>
          <role>org.acegisecurity.providers.dao.DaoAuthenticationProvider</role>
          <field-name>providers</field-name>
        </requirement>
        <requirement>
          <role>org.springframework.context.ApplicationEventPublisher</role>
          <field-name>applicationEventPublisher</field-name>
        </requirement>
      </requirements>
    </component>

    <!-- In memory database used only for testing -->
    <!-- Remember to remove passwordEncoder from org.acegisecurity.providers.dao.DaoAuthenticationProvider -->
<!--
    <component>
      <role>org.acegisecurity.userdetails.UserDetailsService</role>
      <implementation>org.acegisecurity.userdetails.memory.InMemoryDaoImpl</implementation>
      <configuration>
        <userProperties>
          <property>
            <name>marissa</name>
            <value>koala,ROLE_USER,ROLE_SUPERVISOR</value>
          </property>
          <property>
            <name>dianne</name>
            <value>emu,ROLE_USER</value>
          </property>
          <property>
            <name>scott</name>
            <value>wombat,ROLE_USER</value>
          </property>
        </userProperties>
      </configuration>
    </component>
-->

    <component>
      <role>org.acegisecurity.providers.dao.DaoAuthenticationProvider</role>
      <implementation>org.acegisecurity.providers.dao.DaoAuthenticationProvider</implementation>
      <requirements>
        <requirement>
          <role>org.acegisecurity.userdetails.UserDetailsService</role>
          <field-name>userDetailsService</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.user.model.PasswordEncoder</role>
          <field-name>passwordEncoder</field-name>
        </requirement>
        <!--
        <requirement>
          <role>org.acegisecurity.providers.dao.SaltSource</role>
          <field-name>saltSource</field-name>
        </requirement>
        -->
      </requirements>
    </component>

    <component>
      <role>org.apache.maven.user.model.PasswordEncoder</role>
      <role-hint>SHA-256</role-hint>
      <implementation>org.apache.maven.user.acegi.AcegiPasswordEncoder</implementation>
      <configuration>
        <algorithm>SHA-256</algorithm>
      </configuration>
    </component>

    <component>
      <role>org.acegisecurity.event.authentication.LoggerListener</role>
      <implementation>org.acegisecurity.event.authentication.LoggerListener</implementation>
    </component>

    <component>
      <role>org.acegisecurity.context.HttpSessionContextIntegrationFilter</role>
      <implementation>org.acegisecurity.context.HttpSessionContextIntegrationFilter</implementation>
    </component>

    <component>
      <role>org.acegisecurity.ui.ExceptionTranslationFilter</role>
      <implementation>org.acegisecurity.ui.ExceptionTranslationFilter</implementation>
      <requirements>
        <requirement>
          <role>org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint</role>
          <field-name>authenticationEntryPoint</field-name>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.acegisecurity.ui.webapp.AuthenticationProcessingFilter</role>
      <implementation>org.acegisecurity.ui.webapp.AuthenticationProcessingFilter</implementation>
      <requirements>
        <requirement>
          <role>org.acegisecurity.providers.ProviderManager</role>
          <field-name>authenticationManager</field-name>
        </requirement>
      </requirements>
      <configuration>
        <authenticationFailureUrl>/user/login.jsp?login_error=login.bad.login.password</authenticationFailureUrl>
        <defaultTargetUrl>/</defaultTargetUrl>
        <filterProcessesUrl>/j_acegi_security_check</filterProcessesUrl>
        <exceptionMappings>
          <property>
            <name>org.acegisecurity.CredentialsExpiredException</name>
            <value>/user/expiredPassword.action</value>
          </property>
          <property>
            <name>org.acegisecurity.LockedException</name>
            <value>/user/login.jsp?login_error=login.account.locked</value>
          </property>
        </exceptionMappings>
      </configuration>
    </component>

    <component>
      <role>org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint</role>
      <implementation>org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint</implementation>
      <configuration>
        <loginFormUrl>/user/login.jsp</loginFormUrl>
        <forceHttps>false</forceHttps>
      </configuration>
    </component>

    <component>
      <role>org.acegisecurity.providers.anonymous.AnonymousProcessingFilter</role>
      <implementation>org.acegisecurity.providers.anonymous.AnonymousProcessingFilter</implementation>
      <requirements>
        <requirement>
          <role>org.acegisecurity.userdetails.memory.UserAttribute</role>
          <role-hint>anonymous</role-hint>
          <field-name>userAttribute</field-name>
        </requirement>
      </requirements>
      <configuration>
        <key>foobar</key>
      </configuration>
    </component>

    <component>
      <role>org.acegisecurity.userdetails.memory.UserAttribute</role>
      <role-hint>anonymous</role-hint>
      <implementation>org.acegisecurity.userdetails.memory.UserAttribute</implementation>
      <component-composer>setter</component-composer>
      <configuration>
        <!-- user name of anonymous user, needs to match the one created by continuum initializer so ACLs match -->
        <password>guest</password>
        <authoritiesAsString>
          <role>ROLE_ANONYMOUS</role>
        </authoritiesAsString>
      </configuration>
    </component>


    <!-- authorization -->

    <!-- ACL database initialization -->
    <component>
      <role>org.apache.maven.user.acegi.acl.AclInitializer</role>
      <implementation>org.apache.maven.continuum.security.acegi.acl.AclInitializer</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.mojo.sql.SqlExecMojo</role>
          <field-name>sqlMojo</field-name>
        </requirement>
        <requirement>
          <role>org.acegisecurity.acl.basic.BasicAclExtendedDao</role>
          <field-name>dao</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.store.ContinuumStore</role>
          <field-name>store</field-name>
        </requirement>
      </requirements>
      <configuration>
        <sqlClasspathResource>${acl.sql}</sqlClasspathResource>
      </configuration>
    </component>
    
    <component>
      <role>org.codehaus.mojo.sql.SqlExecMojo</role>
      <implementation>org.codehaus.mojo.sql.SqlExecMojo</implementation>
      <configuration>
        <driver>${db.driverName}</driver>
        <url>${db.url}</url>
        <username>${db.userName}</username>
        <password>${db.password}</password>
        <onError>continue</onError>
      </configuration>
    </component>

    <component>
      <role>javax.sql.DataSource</role>
      <implementation>org.apache.commons.dbcp.BasicDataSource</implementation>
      <configuration>
        <driverClassName>${db.driverName}</driverClassName>
        <url>${db.url}</url>
        <username>${db.userName}</username>
        <password>${db.password}</password>
      </configuration>
    </component>

    <component>
      <role>org.acegisecurity.acl.basic.BasicAclExtendedDao</role>
      <implementation>org.acegisecurity.acl.basic.jdbc.JdbcExtendedDaoImpl</implementation>
      <component-composer>setter</component-composer>
      <requirements>
        <requirement>
          <role>javax.sql.DataSource</role>
          <field-name>dataSource</field-name>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.acegisecurity.intercept.web.FilterSecurityInterceptor</role>
      <implementation>org.acegisecurity.intercept.web.FilterSecurityInterceptor</implementation>
      <requirements>
        <requirement>
          <role>org.acegisecurity.providers.ProviderManager</role>
          <field-name>authenticationManager</field-name>
        </requirement>
        <requirement>
          <role>org.acegisecurity.AccessDecisionManager</role>
          <field-name>accessDecisionManager</field-name>
        </requirement>
      </requirements>
      <configuration>
        <objectDefinitionSource implementation="org.acegisecurity.intercept.web.FilterInvocationDefinitionDecorator">
          <decorated implementation="org.acegisecurity.intercept.web.PathBasedFilterInvocationDefinitionMap"/>
          <convertUrlToLowercaseBeforeComparison>true</convertUrlToLowercaseBeforeComparison>
          <mappings>
            <filterInvocationDefinitionSourceMapping>
              <url>/secure/**</url>
              <configAttributes>
                <configAttribute>ROLE_user</configAttribute>
              </configAttributes>
            </filterInvocationDefinitionSourceMapping>
            <filterInvocationDefinitionSourceMapping>
              <url>/add*project*</url>
              <configAttributes>
                <configAttribute>ROLE_admin</configAttribute>
                <configAttribute>ROLE_addProject</configAttribute>
              </configAttributes>
            </filterInvocationDefinitionSourceMapping>
            <filterInvocationDefinitionSourceMapping>
              <url>/schedules*</url>
              <configAttributes>
                <configAttribute>ROLE_admin</configAttribute>
                <configAttribute>ROLE_manageSchedule</configAttribute>
              </configAttributes>
            </filterInvocationDefinitionSourceMapping>
            <filterInvocationDefinitionSourceMapping>
              <url>/configuration*</url>
              <configAttributes>
                <configAttribute>ROLE_admin</configAttribute>
                <configAttribute>ROLE_manageConfiguration</configAttribute>
              </configAttributes>
            </filterInvocationDefinitionSourceMapping>
            <!-- TODO protect other URLs -->

            <!-- user URLs -->
            <filterInvocationDefinitionSourceMapping>
              <url>/user/list*</url>
              <configAttributes>
                <configAttribute>ROLE_admin</configAttribute>
                <configAttribute>ROLE_manageUsers</configAttribute>
              </configAttributes>
            </filterInvocationDefinitionSourceMapping>
            <filterInvocationDefinitionSourceMapping>
              <url>/user/delete*</url>
              <configAttributes>
                <configAttribute>ROLE_admin</configAttribute>
                <configAttribute>ROLE_manageUsers</configAttribute>
              </configAttributes>
            </filterInvocationDefinitionSourceMapping>
            <filterInvocationDefinitionSourceMapping>
              <url>/user/addRole*</url>
              <configAttributes>
                <configAttribute>ROLE_admin</configAttribute>
                <configAttribute>ROLE_manageUsers</configAttribute>
              </configAttributes>
            </filterInvocationDefinitionSourceMapping>
            <filterInvocationDefinitionSourceMapping>
              <url>/user/edit*</url>
              <configAttributes>
                <configAttribute>ROLE_admin</configAttribute>
                <configAttribute>ROLE_manageUsers</configAttribute>
              </configAttributes>
            </filterInvocationDefinitionSourceMapping>
            <filterInvocationDefinitionSourceMapping>
              <url>/user/myAccount*</url>
              <configAttributes>
                <configAttribute>ROLE_user</configAttribute>
              </configAttributes>
            </filterInvocationDefinitionSourceMapping>
          </mappings>
        </objectDefinitionSource>
      </configuration>
    </component>


    <!--
     | Logger manager
     -->
    <component>
      <role>org.codehaus.plexus.logging.LoggerManager</role>
      <implementation>org.codehaus.plexus.logging.log4j.Log4JLoggerManager</implementation>
      <lifecycle-handler>basic</lifecycle-handler>

      <configuration>
        <threshold>INFO</threshold>
        <default-appender>console,rolling</default-appender>
        <appenders>
          <appender>
            <id>console</id>
            <threshold>DEBUG</threshold>
            <type>org.apache.log4j.ConsoleAppender</type>
            <conversion-pattern>%d [%t] %-5p %-30c{1} - %m%n</conversion-pattern>
          </appender>

          <appender>
            <id>rolling</id>
            <threshold>DEBUG</threshold>
            <type>org.apache.log4j.RollingFileAppender</type>
            <conversion-pattern>%-4r [%t] %-5p %c %x - %m%n</conversion-pattern>

            <properties>
              <property>
                <name>file</name>
                <value>${plexus.home}/logs/continuum.log</value>
              </property>
              <property>
                <name>append</name>
                <value>true</value>
              </property>
              <property>
                <name>maxBackupIndex</name>
                <value>10</value>
              </property>
              <property>
                <name>maxFileSize</name>
                <value>10MB</value>
              </property>
            </properties>
          </appender>
        </appenders>
        <levels>
          <level>
            <hierarchy>org.apache.maven.continuum.project.builder.ContinuumProjectBuilder</hierarchy>
            <level>DEBUG</level>
          </level>
          <level>
            <hierarchy>org.apache.maven.continuum.execution.maven.m2.DefaultMavenBuilderHelper</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>org.codehaus.plexus.velocity</hierarchy>
            <level>WARN</level>
          </level>
          <level>
            <hierarchy>org.codehaus.plexus.mailsender.MailSender</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>JPOX</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>JPOX.Cache</hierarchy>
            <level>WARN</level>
          </level>
          <level>
            <hierarchy>org.apache.jasper</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>com.opensymphony.xwork</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>com.opensymphony.webwork</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>org.extremecomponents</hierarchy>
            <level>INFO</level>
          </level>
          <level>
            <hierarchy>org.acegisecurity</hierarchy>
            <level>INFO</level>
          </level>
        </levels>
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.user.model.UserManager</role>
      <role-hint>acegi</role-hint>
      <implementation>org.apache.maven.user.acegi.AcegiUserManager</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.user.model.UserManager</role>
          <role-hint>default</role-hint>
          <field-name>userManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.security.acegi.acl.AclEventHandler</role>
          <field-name>aclManager</field-name>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.apache.maven.user.model.UserManager</role>
      <role-hint>default</role-hint>
      <implementation>org.apache.maven.user.model.impl.DefaultUserManager</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.user.model.store.UserStore</role>
          <field-name>userStore</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.user.model.UserSecurityPolicy</role>
          <field-name>securityPolicy</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.user.model.UserHolder</role>
          <role-hint>acegi</role-hint>
          <field-name>userHolder</field-name>
        </requirement>
      </requirements>
    </component>
    
    <component>
      <role>org.apache.maven.user.model.store.UserStore</role>
      <implementation>org.apache.maven.user.model.store.impl.DefaultUserStore</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.jdo.JdoFactory</role>
          <field-name>jdoFactory</field-name>
        </requirement>
      </requirements>
    </component>
    
    <component>
      <role>org.apache.maven.user.model.UserSecurityPolicy</role>
      <implementation>org.apache.maven.user.model.impl.DefaultUserSecurityPolicy</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.user.model.PasswordRule</role>
          <field-name>rules</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.user.model.PasswordEncoder</role>
          <role-hint>SHA-256</role-hint>
          <field-name>passwordEncoder</field-name>
        </requirement>
      </requirements>
      <configuration>
        <allowedLoginAttempts>3</allowedLoginAttempts>
        <previousPasswordsCount>7</previousPasswordsCount>
        <daysBeforeExpiration>90</daysBeforeExpiration>
      </configuration>
    </component>

    <!-- password rules -->
    <component>
      <role>org.apache.maven.user.model.PasswordRule</role>
      <role-hint>must-have</role-hint>
      <implementation>org.apache.maven.user.model.rules.MustHavePasswordRule</implementation>
    </component>
    <component>
      <role>org.apache.maven.user.model.PasswordRule</role>
      <role-hint>alpha-count</role-hint>
      <implementation>org.apache.maven.user.model.rules.AlphaPasswordRule</implementation>
      <configuration>
        <minimumCount>1</minimumCount>
      </configuration>
    </component>
    <component>
      <role>org.apache.maven.user.model.PasswordRule</role>
      <role-hint>character-length</role-hint>
      <implementation>org.apache.maven.user.model.rules.CharacterLengthPasswordRule</implementation>
      <configuration>
        <minimumCharacters>7</minimumCharacters>
        <maximumCharacters>30</maximumCharacters>
      </configuration>
    </component>
    <component>
      <role>org.apache.maven.user.model.PasswordRule</role>
      <role-hint>numerical-count</role-hint>
      <implementation>org.apache.maven.user.model.rules.NumericalPasswordRule</implementation>
      <configuration>
        <minimumCount>1</minimumCount>
      </configuration>
    </component>
    <component>
      <role>org.apache.maven.user.model.PasswordRule</role>
      <role-hint>reuse</role-hint>
      <implementation>org.apache.maven.user.model.rules.ReusePasswordRule</implementation>
    </component>

    <component>
      <role>org.apache.maven.continuum.initialization.ContinuumInitializer</role>
      <implementation>org.apache.maven.continuum.security.acegi.initialization.SecurityContinuumInitializer</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.continuum.store.ContinuumStore</role>
          <field-name>store</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.user.model.UserManager</role>
          <role-hint>acegi</role-hint>
          <field-name>userManager</field-name>
        </requirement>
      </requirements>
    </component>
    
  </components>

</plexus>
