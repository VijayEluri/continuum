<plexus>

  <components>

    <component>
      <role>org.apache.maven.user.acegi.acl.AclInitializer</role>
      <implementation>org.apache.maven.continuum.security.acegi.acl.AclInitializer</implementation>
      <requirements>
        <requirement>
          <role>org.codehaus.mojo.sql.SqlExecMojo</role>
          <field-name>sqlMojo</field-name>
        </requirement>
        <requirement>
          <role>org.acegisecurity.acl.basic.BasicAclExtendedDao</role>
          <field-name>dao</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.continuum.store.ContinuumStore</role>
          <field-name>store</field-name>
        </requirement>
      </requirements>
      <configuration>
        <sqlClasspathResource>org/apache/maven/user/acegi/acl/acegi-acl-derby.sql</sqlClasspathResource>
      </configuration>
    </component>

    <component>
      <role>javax.sql.DataSource</role>
      <implementation>org.apache.commons.dbcp.BasicDataSource</implementation>
      <configuration>
        <driverClassName>org.apache.derby.jdbc.EmbeddedDriver</driverClassName>
        <url>jdbc:derby:${plexus.home}/database;create=true</url>
        <username>sa</username>
      </configuration>
    </component>

    <component>
      <role>org.acegisecurity.acl.basic.BasicAclExtendedDao</role>
      <implementation>org.acegisecurity.acl.basic.jdbc.JdbcExtendedDaoImpl</implementation>
      <component-composer>setter</component-composer>
      <requirements>
        <requirement>
          <role>javax.sql.DataSource</role>
          <field-name>dataSource</field-name>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.codehaus.mojo.sql.SqlExecMojo</role>
      <implementation>org.codehaus.mojo.sql.SqlExecMojo</implementation>
      <configuration>
        <username>sa</username>
        <password></password>
        <driver>org.apache.derby.jdbc.EmbeddedDriver</driver>
        <url>jdbc:derby:${plexus.home}/database;create=true</url>
        <onError>continue</onError>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.plexus.jdo.JdoFactory</role>
      <implementation>org.codehaus.plexus.jdo.DefaultConfigurableJdoFactory</implementation>
      <configuration>
        <driverName>org.apache.derby.jdbc.EmbeddedDriver</driverName>
        <url>jdbc:derby:${plexus.home}/database;create=true</url>
        <userName>sa</userName>
        <password></password>

        <!-- JPOX and JDO configuration -->
        <persistenceManagerFactoryClass>org.jpox.PersistenceManagerFactoryImpl</persistenceManagerFactoryClass>
        <otherProperties>
          <property>
            <name>org.jpox.autoCreateSchema</name>
            <value>true</value>
          </property>
          <property>
            <name>org.jpox.autoStartMechanism</name>
            <value>SchemaTable</value>
          </property>
          <property>
            <name>org.jpox.autoStartMechanismMode</name>
            <value>Ignored</value>
          </property>
          <property>
            <name>org.jpox.validateTables</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.validateConstraints</name>
            <value>false</value>
          </property>
          <property>
            <name>org.jpox.transactionIsolation</name>
            <value>READ_UNCOMMITTED</value>
          </property>
          <property>
            <name>org.jpox.poid.transactionIsolation</name>
            <value>READ_UNCOMMITTED</value>
          </property>
        </otherProperties>
      </configuration>
    </component>

  </components>

</plexus>
